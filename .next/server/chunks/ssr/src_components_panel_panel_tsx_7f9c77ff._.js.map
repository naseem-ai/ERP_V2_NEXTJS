{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ashif/Desktop/ERP_V2_NEXTJS/src/components/panel/panel.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useState, useContext, useRef, ReactNode } from 'react';\nimport { slideToggle } from '@/composables/slideToggle';\n\ninterface PanelContextType {\n  expand: boolean;\n  reload: boolean;\n  remove: boolean;\n  toggleExpand: () => void;\n  toggleReload: () => void;\n  toggleRemove: () => void;\n  toggleCollapse: () => void;\n  panelBodyRef: React.RefObject<HTMLDivElement>;\n}\n\nconst PanelContext = createContext<PanelContextType | undefined>(undefined);\n\ninterface PanelProps {\n  theme?: string;\n  className?: string;\n  children: ReactNode;\n}\n\nexport function Panel({ theme = 'inverse', className = '', children }: PanelProps) {\n  const [expand, setExpand] = useState(false);\n  const [reload, setReload] = useState(false);\n  const [remove, setRemove] = useState(false);\n  const panelBodyRef = useRef<HTMLDivElement>(null!);\n\n  const toggleExpand = () => setExpand((prev) => !prev);\n  const toggleRemove = () => setRemove((prev) => !prev);\n  const toggleReload = () => {\n    if (!reload) {\n      setReload(true);\n      setTimeout(() => setReload(false), 2000);\n    }\n  };\n\n  const toggleCollapse = () => {\n    if (panelBodyRef.current) {\n      slideToggle(panelBodyRef.current);\n    }\n  };\n\n  const panelState: PanelContextType = {\n    expand,\n    reload,\n    remove,\n    toggleExpand,\n    toggleReload,\n    toggleRemove,\n    toggleCollapse,\n    panelBodyRef,\n  };\n\n  return (\n    <PanelContext.Provider value={panelState}>\n      {!remove && (\n        <div className={`panel panel-${theme} ${expand ? 'panel-expand' : ''} ${reload ? 'panel-loading' : ''} ${className}`}>\n          {children}\n        </div>\n      )}\n    </PanelContext.Provider>\n  );\n}\n\ninterface PanelHeaderProps {\n  className?: string;\n  noButton?: boolean;\n  children?: ReactNode;\n}\n\nexport function PanelHeader({ className = '', noButton = false, children }: PanelHeaderProps) {\n  const context = useContext(PanelContext);\n  if (!context) throw new Error('PanelHeader must be used within a Panel');\n\n  const { toggleExpand, toggleReload, toggleRemove, toggleCollapse } = context;\n\n  return (\n    <div className={`panel-heading ${className}`}>\n      <h4 className=\"panel-title\">{children}</h4>\n      {!noButton && (\n        <div className=\"panel-heading-btn\">\n          <button className=\"btn btn-xs btn-icon btn-circle btn-default\" onClick={toggleExpand}>\n            <i className=\"fa fa-expand\"></i>\n          </button>\n          &nbsp;&nbsp;\n          <button className=\"btn btn-xs btn-icon btn-circle btn-success\" onClick={toggleReload}>\n            <i className=\"fa fa-redo\"></i>\n          </button>\n          &nbsp;&nbsp;\n          <button className=\"btn btn-xs btn-icon btn-circle btn-warning\" onClick={toggleCollapse}>\n            <i className=\"fa fa-minus\"></i>\n          </button>\n          &nbsp;&nbsp;\n          <button className=\"btn btn-xs btn-icon btn-circle btn-danger\" onClick={toggleRemove}>\n            <i className=\"fa fa-times\"></i>\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\ninterface PanelBodyProps {\n  className?: string;\n  children?: ReactNode;\n}\n\nexport function PanelBody({ className = '', children }: PanelBodyProps) {\n  const context = useContext(PanelContext);\n  if (!context) throw new Error('PanelBody must be used within a Panel');\n\n  const { reload, panelBodyRef } = context;\n\n  return (\n    <div ref={panelBodyRef} className={`panel-body ${className}`}>\n      {children}\n      {reload && (\n        <div className=\"panel-loader\">\n          <span className=\"spinner spinner-sm\"></span>\n        </div>\n      )}\n    </div>\n  );\n}\n\ninterface PanelFooterProps {\n  className?: string;\n  children?: ReactNode;\n}\n\nexport function PanelFooter({ className = '', children }: PanelFooterProps) {\n  return <div className={`panel-footer ${className}`}>{children}</div>;\n}"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAHA;;;;AAgBA,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAgC;AAQ1D,SAAS,MAAM,EAAE,QAAQ,SAAS,EAAE,YAAY,EAAE,EAAE,QAAQ,EAAc;IAC/E,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IAE5C,MAAM,eAAe,IAAM,UAAU,CAAC,OAAS,CAAC;IAChD,MAAM,eAAe,IAAM,UAAU,CAAC,OAAS,CAAC;IAChD,MAAM,eAAe;QACnB,IAAI,CAAC,QAAQ;YACX,UAAU;YACV,WAAW,IAAM,UAAU,QAAQ;QACrC;IACF;IAEA,MAAM,iBAAiB;QACrB,IAAI,aAAa,OAAO,EAAE;YACxB,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD,EAAE,aAAa,OAAO;QAClC;IACF;IAEA,MAAM,aAA+B;QACnC;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IACF;IAEA,qBACE,8OAAC,aAAa,QAAQ;QAAC,OAAO;kBAC3B,CAAC,wBACA,8OAAC;YAAI,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,EAAE,SAAS,iBAAiB,GAAG,CAAC,EAAE,SAAS,kBAAkB,GAAG,CAAC,EAAE,WAAW;sBACjH;;;;;;;;;;;AAKX;AAQO,SAAS,YAAY,EAAE,YAAY,EAAE,EAAE,WAAW,KAAK,EAAE,QAAQ,EAAoB;IAC1F,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS,MAAM,IAAI,MAAM;IAE9B,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,cAAc,EAAE,GAAG;IAErE,qBACE,8OAAC;QAAI,WAAW,CAAC,cAAc,EAAE,WAAW;;0BAC1C,8OAAC;gBAAG,WAAU;0BAAe;;;;;;YAC5B,CAAC,0BACA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAO,WAAU;wBAA6C,SAAS;kCACtE,cAAA,8OAAC;4BAAE,WAAU;;;;;;;;;;;oBACN;kCAET,8OAAC;wBAAO,WAAU;wBAA6C,SAAS;kCACtE,cAAA,8OAAC;4BAAE,WAAU;;;;;;;;;;;oBACN;kCAET,8OAAC;wBAAO,WAAU;wBAA6C,SAAS;kCACtE,cAAA,8OAAC;4BAAE,WAAU;;;;;;;;;;;oBACN;kCAET,8OAAC;wBAAO,WAAU;wBAA4C,SAAS;kCACrE,cAAA,8OAAC;4BAAE,WAAU;;;;;;;;;;;;;;;;;;;;;;;AAMzB;AAOO,SAAS,UAAU,EAAE,YAAY,EAAE,EAAE,QAAQ,EAAkB;IACpE,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS,MAAM,IAAI,MAAM;IAE9B,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,GAAG;IAEjC,qBACE,8OAAC;QAAI,KAAK;QAAc,WAAW,CAAC,WAAW,EAAE,WAAW;;YACzD;YACA,wBACC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAK,WAAU;;;;;;;;;;;;;;;;;AAK1B;AAOO,SAAS,YAAY,EAAE,YAAY,EAAE,EAAE,QAAQ,EAAoB;IACxE,qBAAO,8OAAC;QAAI,WAAW,CAAC,aAAa,EAAE,WAAW;kBAAG;;;;;;AACvD","debugId":null}}]
}